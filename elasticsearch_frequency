#!/usr/bin/python

import sys
from bs4 import BeautifulSoup as bs
import re
import requests
import sys
from elasticsearch import Elasticsearch

from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk import word_tokenize
import numpy
import math

from flask import Flask, render_template, request

app = Flask(__name__)

word_d = {}
sent_list = []

def process_new_sentence(s):
    sent_list.append(s)
    tokenized = word_tokenize(s)
    for word in tokenized:
        if word not in word_d.keys():
            word_d[word] = 0
        word_d[word] += 1
        
def compute_tf(s):
    bow = set()
    # dictionary for words in the given sentence (document)
    wordcount_d = {} 

    tokenized = word_tokenize(s)
    for tok in tokenized:
        if tok not in wordcount_d.keys():
            wordcount_d[tok]=0
        wordcount_d[tok] += 1
        bow.add(tok)

    tf_d = {}
    for word,count in wordcount_d.items():
        tf_d[word] = count/float(len(bow))
    
    return tf_d
    
def compute_idf():
    Dval = len(sent_list)
    # build set of words
    bow = set()

    for i in range(0, len(sent_list)):
        tokenized = word_tokenize(sent_list[i])
        for tok in tokenized:
            bow.add(tok)

    idf_d = {}
    for t in bow:
        cnt = 0
        for s in sent_list:
            if t in word_tokenize(s):
                cnt += 1
        idf_d[t] = math.log(Dval/float(cnt))
    return idf_d
    
def Youtuber_func(name):
    global res1
    global freq
    global res2
    
    freq={}
    
    #insert youtuber name    
    es_host="http://localhost:9200"      
    es = Elasticsearch(es_host)
   
    global original
    original=[]

    data0 = es.search(index="youtuber", body={"query":{"match_all":{}}})
    if es.indices.exists(index='youtuber'):
    #put original data into original(list)
       for doc in data0['hits']['hits']:
          data=doc['_source']
          original=list(data['name'])
       original.append(name)
       e1={
          "name":original
       }
    else:
       e1={
          "name":name
       }
       
    es.index(index='youtuber', id=2, document=e1)   
    
    data1 = es.search(index="youtuber", body={"query":{"match_all":{}}})
    if data1['hits']['total']['value']>0:
       for doc in data1['hits']['hits']:
          data=doc['_source']
          res1=data['name']
         
    #data analysis
    for i in res1:
        process_new_sentence(i)

    idf_d = compute_idf()
    for i in range(0, len(sent_list)):
        tf_d = compute_tf(sent_list[i])
        for word,tfval in tf_d.items():
            freq[word]= tfval*idf_d[word]

    e2={
        "name":original,
        "freq":freq
    }
    
    es.index(index='youtuber', id=2, document=e2)   
    
    data2 = es.search(index="youtuber", body={"query":{"match_all":{}}})
    if data2['hits']['total']['value']>0:
       for doc in data2['hits']['hits']:
          data=doc['_source']
          res2=data['freq']  
    global resultt     
    resultt = sorted(res2, key=lambda x : res2[x])
    resultt=resultt[:5]   
    
@app.route('/')
def home():
   return render_template("register.html")

@app.route('/info', methods=['POST'])
def info():
   mode=request.form['youtuber']
   x=requests.utils.unquote(mode)
   Youtuber_func(mode)
   return render_template("ela.html", res1=resultt)

if __name__=='__main__':
   app.run()
